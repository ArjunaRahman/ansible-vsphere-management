---
- name: network | Managing vSwitches
  win_shell: |
    $vmHost="{{ hostvars[item]['ansible_host'] }}"
    Connect-VIServer -Server $vmHost
    $CurrentvSwitches=@(Get-VMHost -Server $vmHost | Get-VirtualSwitch| Select-Object -ExpandProperty Name)
    $DesiredvSwitches=@("{% for vs in vsphere_vswitches %}{{ vs['name'] }}{% if not loop.last %}", "{% endif %}{% endfor %}")
    Foreach ($i in $CurrentvSwitches) {
      if ($DesiredvSwitches -notcontains $i) {
        Remove-VirtualSwitch -Server $vmHost $i -Confirm:$false
      }
    }
    {% for vswitch in vsphere_vswitches %}
    $vSwitchName="{{ vswitch['name'] }}"
    if ($CurrentvSwitches -notcontains $vSwitchName){
      New-VirtualSwitch -Server $vmHost -Name $vSwitchName -Confirm:$false
    }
    $vSwitch=(Get-VirtualSwitch -Server $vmHost -Name $vSwitchName)
    $NicTeamingPolicy=(Get-VMHost -Server $vmHost | Get-VirtualSwitch -Name $vSwitchName | Get-NicTeamingPolicy)
    $ActiveNics=@($NicTeamingPolicy | Select-Object -ExpandProperty ActiveNic)
    $CurrentNics=@($vSwitch | Get-VMHostNetworkAdapter -Physical | Select-Object -ExpandProperty Name)
    {%   if vswitch['nics'] is defined %}
    $DesiredNics=@($("{{ vswitch['nics']|join('", "') }}"))
    $LoadBalancingPolicy=($NicTeamingPolicy | Select-Object -ExpandProperty LoadBalancingPolicy)
    Foreach ($i in $DesiredNics){
      if ($CurrentNics -notcontains $i){
        $Nic=$(Get-VMHostNetworkAdapter -Server $vmHost -Physical -Name $i)
        $vSwitch | Add-VirtualSwitchPhysicalNetworkAdapter -VMHostPhysicalNic $Nic -Confirm:$false
      }
    }
    Foreach ($i in $CurrentNics){
      if ($DesiredNics -notcontains $i){
        Get-VMHost -Server $vmHost | Get-VMHostNetworkAdapter -Physical -Name $i | Remove-VirtualSwitchPhysicalNetworkAdapter -Confirm:$false
      }
    }
    Foreach ($i in $DesiredNics) {
      if ($ActiveNics -notcontains $i){
        $vSwitch | Get-NicTeamingPolicy | Set-NicTeamingPolicy -MakeNicActive $i
      }
    }
    {%   endif %}
    {%   if vswitch['portgroups'] is defined %}
    $CurrentPortGroups=@($($vSwitch | Get-VirtualPortGroup | Select-Object -ExpandProperty Name))
    $DesiredPortGroups=@("{% for pg in vswitch['portgroups'] %}{{ pg['name'] }}{% if not loop.last %}", "{% endif %}{% endfor %}")
    Foreach ($i in $CurrentPortGroups) {
      if ($DesiredPortGroups -notcontains $i) {
        $pg=($vSwitch | Get-VirtualPortGroup -Name $i)
        Remove-VirtualPortGroup -VirtualPortGroup $pg -Confirm:$false
      }
    }
    {%     for portgroup in vswitch['portgroups'] %}
    $PortGroupName="{{ portgroup['name'] }}"
    if ($CurrentPortGroups -notcontains $PortGroupName){
      New-VirtualPortGroup -Server $vmHost -VirtualSwitch $vSwitchName -Name $PortGroupName{% if portgroup['vlan_id'] is defined %} -VLanId {{ portgroup['vlan_id'] }}{% endif %} -Confirm:$false
    }
    {%       if portgroup['inherit_failover_order'] is defined %}
    $CurrentFailoverOrderInherited="$($vSwitch | Get-VirtualPortGroup -Name $PortGroupName | Get-NicTeamingPolicy | Select-Object -ExpandProperty IsFailoverOrderInherited)"
    $DesiredFailoverOrderInherited="{{ portgroup['inherit_failover_order'] }}"
    if ($CurrentFailoverOrderInherited -ne $DesiredFailoverOrderInherited) {
      $Policy=(Get-VMHost -Server $vmHost | Get-VirtualPortGroup -Name $PortGroupName| Get-NicTeamingPolicy)
      Set-NicTeamingPolicy -VirtualPortGroupPolicy $Policy -InheritFailoverOrder ${{ portgroup['inherit_failover_order']|lower }} -Confirm:$false
    }
    {%       endif %}
    {%     endfor %}
    {%   endif %}
    {%   if vswitch['load_balancing_policy'] is defined %}
    $vmSwitchLoadBalancingPolicy="{{ vswitch['load_balancing_policy'] }}"
    If ($LoadBalancingPolicy -ne $vmSwitchLoadBalancingPolicy) {
      $NicTeamingPolicy | Set-NicTeamingPolicy -LoadBalancingPolicy $vmSwitchLoadBalancingPolicy
    }
    {%   endif %}
    {% endfor %}
  with_items: "{{ groups[vsphere_management_hosts_group] }}"
  when: vsphere_vswitches is defined
